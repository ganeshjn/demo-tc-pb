{"version":3,"sources":["components/Modal.js","firebase.js","components/Phonebook.js","components/App.js","index.js"],"names":["Modal","props","useState","toggle","setToggle","formValues","setFormValues","useEffect","fields","map","_","i","createRef","visible","current","focus","ffield","f","type","placeholder","name","ref","defaultValue","value","autoFocus","className","label","style","color","fontSize","required","display","title","onClick","e","preventDefault","data","idx","forEach","trim","length","Error","onButtonOk","err","buttonOk","onButtonClose","buttonClose","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","DB_DOCUMENT","FORM_FIELDS","Phonebook","contacts","setContacts","toggleAdd","setToggleAdd","formFields","setFormFields","editId","setEditId","fetchContacts","a","collection","get","tc","docs","d","getContacts","phoneList","p","phone","location","email","handleBtnEdit","id","handleBtnDelete","filter","doc","delete","newlist","handleUpsertContacts","req","v4","set","App","ReactDOM","render","document","getElementById"],"mappings":"qOAEe,SAASA,EAAMC,GAC5B,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRD,EAAcL,EAAMO,OAAOC,KAAI,SAACC,EAAGC,GACjC,OAAOC,4BAER,CAACX,EAAMO,SAEVD,qBAAU,WACRH,EAAUH,EAAMY,WACf,CAACZ,EAAMY,UAEVN,qBAAU,WACJF,EAAW,IACbA,EAAW,GAAGS,QAAQC,WAI1B,IAAMC,EAAS,SAACC,EAAGN,GACjB,OAAOM,EAAEC,MACP,IAAK,OACL,IAAK,QACL,IAAK,WACH,OAAO,uBAAOA,KAAMD,EAAEC,KAAMC,YAAaF,EAAEE,YAAaC,KAAMH,EAAEG,KAAMC,IAAKhB,EAAWM,GAAIW,aAAcL,EAAEM,MAAOC,WAAS,MAK1HhB,EAASP,EAAMO,OAAOC,KAAI,SAACQ,EAAGN,GAClC,OAAO,sBAAac,UAAU,iBAAvB,UACL,kCAAQR,EAAES,MAAV,IAAiB,sBAAMC,MAAO,CAACC,MAAO,MAAOC,SAAU,QAAtC,SAAgDZ,EAAEa,SAAW,IAAM,QACnFd,EAAOC,EAAGN,KAFIA,MAkCnB,OACE,qBAAKc,UAAU,mBAAmBE,MAAO,CAACI,QAAU5B,EAAS,QAAU,QAAvE,SACE,sBAAKsB,UAAU,WAAf,UACE,qBAAKA,UAAU,kBAAf,SACGxB,EAAM+B,QAET,qBAAKP,UAAU,mBAAf,SACGjB,IAEH,sBAAKiB,UAAU,kBAAf,UACE,wBAAQQ,QAjCK,SAACC,GACpBA,EAAEC,iBACF,IAAIC,EAAO,GACPC,GAAO,EAEX,IACEhC,EAAWiC,SAAQ,SAACrB,EAAGN,GACrB,GAAIV,EAAMO,OAAOG,GAAGmB,WAAab,EAAEH,QAAQS,MAAMgB,OAAOC,OAEtD,MADAH,EAAM1B,EACA,IAAI8B,MAAM,mBAElBL,EAAKnB,EAAEH,QAAQM,MAAQH,EAAEH,QAAQS,UAGtB,IAATc,IACFjC,GAAU,GACVH,EAAMyC,WAAWN,IAEnB,MAAMO,MAeF,SAAgC1C,EAAM2C,UAAY,OAClD,wBAAQX,QAvCI,WAClB7B,GAAU,GACVH,EAAM4C,iBAqCA,SAA+B5C,EAAM6C,aAAe,kB,0BCjE9DC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAIT,IAEeC,EAFAT,IAASU,YCJlBC,EAAc,aAEdC,EAAc,CAClB,CAAE7B,UAAU,EAAOJ,MAAO,QAASR,KAAM,OAAQC,YAAa,GAAIC,KAAM,QAASG,MAAO,IACxF,CAAEO,UAAU,EAAOJ,MAAO,OAAQR,KAAM,OAAQC,YAAa,GAAIC,KAAM,OAAQG,MAAO,IACtF,CAAEO,UAAU,EAAOJ,MAAO,WAAYR,KAAM,OAAQC,YAAa,GAAIC,KAAM,WAAYG,MAAO,IAC9F,CAAEO,UAAU,EAAOJ,MAAO,QAASR,KAAM,OAAQC,YAAa,GAAIC,KAAM,QAASG,MAAO,KAG3E,SAASqC,IACtB,MAAkC1D,mBAAS,IAA3C,mBAAQ2D,EAAR,KAAkBC,EAAlB,KACA,EAAoC5D,oBAAS,GAA7C,mBAAQ6D,EAAR,KAAmBC,EAAnB,KACA,EAAsC9D,mBAASyD,GAA/C,mBAAQM,EAAR,KAAoBC,EAApB,KACA,EAA8BhE,mBAAS,GAAvC,mBAAQiE,EAAR,KAAgBC,EAAhB,KAEMC,EAAa,uCAAG,8BAAAC,EAAA,sEACHd,EAASe,WAAWb,GAAac,MAD9B,cACdC,EADc,OAEdrC,EAAOqC,EAAGC,KAAKjE,KAAI,SAAAkE,GAAC,OAAIA,EAAEvC,UAFZ,kBAGbA,GAHa,2CAAH,qDAMnB7B,qBAAU,YACS,uCAAG,4BAAA+D,EAAA,sEACCD,IADD,QACZjC,EADY,SAER0B,EAAY1B,GAFJ,2CAAH,qDAIjBwC,KACC,IAEH,IAAMC,EAAYhB,EAASpD,KAAI,SAAAqE,GAC7B,OAAO,+BACL,+BAAOA,EAAEC,QACT,+BAAOD,EAAE1D,OACT,+BAAO0D,EAAEE,WACT,+BAAOF,EAAEG,OAAO,MAChB,sBAAMxD,UAAU,kBAAkBQ,QAAS,SAAAC,GAAC,OAAEgD,EAAcJ,EAAEK,KAA9D,oBACA,sBAAM1D,UAAU,kBAAkBQ,QAAS,SAAAC,GAAC,OAAEkD,EAAgBN,EAAEK,KAAhE,4BANcL,EAAEK,OAuBdD,EAAa,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sDACdK,EAAId,EAASwB,QAAO,SAAAP,GAAC,OAAIA,EAAEK,KAAOA,KACxCjB,EAAcD,EAAWxD,KAAI,SAAAQ,GAC3B,OAAO,2BAAIA,GAAX,IAAcM,MAAOoD,EAAE,GAAG1D,EAAEG,YAE9B4C,GAAa,GACbI,EAAUe,GANU,2CAAH,sDASbC,EAAe,uCAAG,WAAOD,GAAP,eAAAb,EAAA,sEAChBd,EAASe,WAAWb,GAAa4B,IAAIH,GAAII,SADzB,OAEhBC,EAAU3B,EAASwB,QAAO,SAAAP,GAAC,OAAIA,EAAEK,KAAOA,KAC9CrB,EAAY0B,GAHU,2CAAH,sDAMfC,EAAoB,uCAAG,WAAOd,GAAP,eAAAL,EAAA,6DAEvBH,GACFuB,EAAO7B,EAASwB,QAAO,SAAAP,GAAC,OAAIA,EAAEK,KAAOhB,KAAS,GAC9CuB,EAAG,2BAAQA,GAAQf,IAEnBe,EAAG,aAAKP,GAAIQ,eAAShB,GANI,SASrBnB,EAASe,WAAWb,GAAa4B,IAAII,EAAIP,IAAIS,IAAIF,GAT5B,OAWvBvB,GACFC,EAAU,GACVN,EAAYD,EAASpD,KAAI,SAAAqE,GAIvB,OAHIA,EAAEK,KAAOO,EAAIP,KACfL,EAAIY,GAECZ,OAGThB,EAAY,GAAD,mBAAKD,GAAL,CAAe6B,KAG5B1B,GAAa,GAvBc,2CAAH,sDA0B1B,OACE,qCAEKD,EAEC,cAAC/D,EAAD,CACEgC,MAAM,YACNY,SAAS,aACTF,WAAY+C,EACZ5C,cA/De,WACvBmB,GAAa,IA+DLnD,QAASkD,EACTvD,OAAQyD,IAPV,GAWJ,qBAAKxC,UAAU,YAAf,SACE,oBAAIA,UAAU,GAAd,yBAGF,qBAAIA,UAAU,UAAd,UACE,qBAAIA,UAAU,eAAd,UACE,yCACA,wCACA,4CACA,yCACA,sBAAMA,UAAU,kBAAhB,kBACA,sBAAMA,UAAU,kBAAhB,qBAEDoD,KAGH,qBAAKpD,UAAU,YAAf,SACE,wBAAQQ,QAlFO,WACf8B,EACFC,GAAa,IAGfE,EAAcP,GACdK,GAAa,KA4ET,0BCtIO,SAAS6B,IACtB,OACE,qBAAKpE,UAAU,eAAf,SACE,cAAC,EAAD,MCCNqE,IAASC,OACP,cAACF,EAAD,IACEG,SAASC,eAAe,W","file":"static/js/main.eed67308.chunk.js","sourcesContent":["import { useState, useEffect, createRef } from 'react';\n\nexport default function Modal(props) {\n  const [toggle, setToggle] = useState(false);\n  const [formValues, setFormValues] = useState([]);\n\n  useEffect(() => {\n    setFormValues(props.fields.map((_, i) => {\n      return createRef();\n    }));\n  }, [props.fields]);\n\n  useEffect(() => {\n    setToggle(props.visible);\n  }, [props.visible])\n\n  useEffect(() => {\n    if (formValues[0]) {\n      formValues[0].current.focus();\n    }\n  });\n\n  const ffield = (f, i) => {\n    switch(f.type) {\n      case 'text':\n      case 'email': \n      case 'password': \n        return <input type={f.type} placeholder={f.placeholder} name={f.name} ref={formValues[i]} defaultValue={f.value} autoFocus />\n      default:\n    }\n  }\n  \n  const fields = props.fields.map((f, i) => {\n    return <div key={i} className=\"pb-modal-field\">\n      <label>{f.label} <span style={{color: 'red', fontSize: '.8em'}}>{f.required ? '*' : ''}</span></label>\n      {ffield(f, i)}\n    </div>\n  });\n\n  const handleClose = () => {\n    setToggle(false);\n    props.onButtonClose();\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {};\n    let idx = -1;\n\n    try {\n      formValues.forEach((f, i) => {\n        if (props.fields[i].required && !f.current.value.trim().length) {\n          idx = i;\n          throw new Error('Mandatory field')\n        }  \n        data[f.current.name] = f.current.value;\n      });\n\n      if (idx === -1) {\n        setToggle(false);\n        props.onButtonOk(data);\n      }\n    } catch(err) {\n      //console.log(err.message);\n    }\n  }\n\n  return (\n    <div className=\"pb-modal-overlay\" style={{display: (toggle ? 'block' : 'none')}}>\n      <div className=\"pb-modal\">\n        <div className=\"pb-modal-header\">\n          {props.title}\n        </div>\n        <div className=\"pb-modal-content\">\n          {fields}\n        </div>\n        <div className=\"pb-modal-footer\">\n          <button onClick={handleSubmit}>{props.buttonOk || 'Ok'}</button>\n          <button onClick={handleClose}>{props.buttonClose || 'Close'}</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDinAJSMr19uJqLjwC0U46QAeUyAN9V6KQ\",\n  authDomain: \"my-dashboard-c3414.firebaseapp.com\",\n  databaseURL: \"https://my-dashboard-c3414.firebaseio.com\",\n  projectId: \"my-dashboard-c3414\",\n  storageBucket: \"my-dashboard-c3414.appspot.com\",\n  messagingSenderId: \"538394994186\",\n  appId: \"1:538394994186:web:039c300f930d3b4fca61f3\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar database = firebase.firestore();\n  \nexport default database;\n","import { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport { v4 } from 'uuid';\n//import axios from 'axios';\nimport database from '../firebase';\n\n//const api = axios.create({\n//  baseURL: 'http://192.168.1.51:3001/'\n//});\n\nconst DB_DOCUMENT = 'tcContacts';//_test';\n\nconst FORM_FIELDS = [\n  { required: true,  label: 'Phone', type: 'text', placeholder: '', name: 'phone', value: '' },\n  { required: true,  label: 'Name', type: 'text', placeholder: '', name: 'name', value: '' },\n  { required: true,  label: 'Location', type: 'text', placeholder: '', name: 'location', value: '' },\n  { required: false, label: 'Email', type: 'text', placeholder: '', name: 'email', value: '' },\n]\n\nexport default function Phonebook() {\n  const [ contacts, setContacts ] = useState([]);\n  const [ toggleAdd, setToggleAdd ] = useState(false);\n  const [ formFields, setFormFields ] = useState(FORM_FIELDS);\n  const [ editId, setEditId ] = useState(0);\n\n  const fetchContacts = async () => {\n    const tc = await database.collection(DB_DOCUMENT).get();\n    const data = tc.docs.map(d => d.data());\n    return data;\n  }\n\n  useEffect(() => {\n    const getContacts = async () => {\n      const data = await fetchContacts();\n      if (data) setContacts(data);\n    }\n    getContacts();\n  }, []);\n\n  const phoneList = contacts.map(p => {\n    return <li key={p.id}>\n      <span>{p.phone}</span>\n      <span>{p.name}</span>\n      <span>{p.location}</span>\n      <span>{p.email||' '}</span>\n      <span className=\"pb-list-li-icon\" onClick={e=>handleBtnEdit(p.id)}>&#x270E;</span>\n      <span className=\"pb-list-li-icon\" onClick={e=>handleBtnDelete(p.id)}>&#x1f5d1;</span>\n    </li>\n  });\n\n  const handleModalClose = () => {\n    setToggleAdd(false);\n  }\n\n  const handleBtnAdd = () => {\n    if (toggleAdd) { \n      setToggleAdd(false);\n      return;\n    }\n    setFormFields(FORM_FIELDS);\n    setToggleAdd(true);\n  }\n\n  const handleBtnEdit = async (id) => {\n    const d = contacts.filter(p => p.id === id);\n    setFormFields(formFields.map(f => {\n      return {...f, value: d[0][f.name]};\n    }));\n    setToggleAdd(true);\n    setEditId(id);\n  }\n\n  const handleBtnDelete = async (id) => {\n    await database.collection(DB_DOCUMENT).doc(id).delete();\n    const newlist = contacts.filter(p => p.id !== id);\n    setContacts(newlist);\n  }\n\n  const handleUpsertContacts = async (d) => {\n    let req;\n    if (editId) {\n      req = (contacts.filter(p => p.id === editId))[0];\n      req = { ...req, ...d };\n    } else {\n      req = { id: v4(), ...d };\n    }\n\n    await database.collection(DB_DOCUMENT).doc(req.id).set(req);\n\n    if (editId) {\n      setEditId(0);\n      setContacts(contacts.map(p => {\n        if (p.id === req.id) {\n          p = req;\n        }\n        return p;\n      }));\n    } else {\n      setContacts([...contacts, req]);\n    }\n\n    setToggleAdd(false);\n  }\n\n  return (\n    <>\n      {\n        !toggleAdd \n        ? ''\n        : <Modal\n            title=\"New Entry\" \n            buttonOk=\"Add/Update\"\n            onButtonOk={handleUpsertContacts}\n            onButtonClose={handleModalClose}\n            visible={toggleAdd} \n            fields={formFields} \n          />\n      }\n\n      <div className=\"pb-header\">\n        <h1 className=\"\">PhoneBook</h1>\n      </div>\n\n      <ul className=\"pb-list\">\n        <li className=\"pg-list-head\">\n          <span>Phone</span>\n          <span>Name</span>\n          <span>Location</span>\n          <span>Email</span>\n          <span className=\"pb-list-li-icon\">&nbsp;</span>\n          <span className=\"pb-list-li-icon\">&nbsp;</span>\n        </li>\n        {phoneList}\n      </ul>\n\n      <div className=\"pb-footer\">\n        <button onClick={handleBtnAdd}>Add New</button>\n      </div>\n    </>\n  );\n}\n","import PhoneBook from './Phonebook';\n\nexport default function App() {\n  return (\n    <div className=\"pb-container\">\n      <PhoneBook />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}