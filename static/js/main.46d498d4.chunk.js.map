{"version":3,"sources":["components/Modal.js","firebase.js","components/Phonebook.js","components/App.js","index.js"],"names":["Modal","props","useState","toggle","setToggle","formValues","setFormValues","useEffect","fields","map","_","i","createRef","visible","ffield","f","type","placeholder","name","ref","className","label","style","color","fontSize","required","display","title","onClick","e","preventDefault","data","idx","forEach","current","value","trim","length","Error","onButtonOk","err","console","log","message","buttonOk","onButtonClose","buttonClose","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","formFields","Phonebook","phonebook","setPhonbook","toggleAdd","setToggleAdd","fetchContacts","a","collection","get","tc","docs","d","getContacts","phoneList","p","phone","location","email","handleDelPhonebook","id","doc","delete","newlist","filter","handleUpsertPhonebook","req","v4","set","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46d498d4.chunk.js","sourcesContent":["import { useState, useEffect, createRef } from 'react';\n\nexport default function Modal(props) {\n  const [toggle, setToggle] = useState(false);\n  const [formValues, setFormValues] = useState([]);\n\n  useEffect(() => {\n    setFormValues(props.fields.map((_, i) => {\n      return createRef();//formValues[i] || createRef();\n    }));\n  }, [props.fields]);\n\n  useEffect(() => {\n    setToggle(props.visible);\n  }, [props.visible])\n\n  const ffield = (f, i) => {\n    switch(f.type) {\n      case 'input': return <input type={f.type} placeholder={f.placeholder} name={f.name} ref={formValues[i]} />\n      default:\n    }\n  }\n  \n  const fields = props.fields.map((f, i) => {\n    return <div key={i} className=\"pb-modal-field\">\n      <label>{f.label} <span style={{color: 'red', fontSize: '.8em'}}>{f.required ? '*' : ''}</span></label>\n      {ffield(f, i)}\n    </div>\n  });\n\n  const handleClose = () => {\n    setToggle(false);\n    props.onButtonClose();\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {};\n    let idx = -1;\n\n    try {\n      formValues.forEach((f, i) => {\n        if (props.fields[i].required && !f.current.value.trim().length) {\n          idx = i;\n          throw new Error('Mandatory field')\n        }  \n        data[f.current.name] = f.current.value;\n      });\n\n      if (idx === -1) {\n        setToggle(false);\n        props.onButtonOk(data);\n      }\n    } catch(err) {\n      console.log(err.message);\n    }\n  }\n\n  return (\n      <div className=\"pb-modal-overlay\" style={{display: (toggle ? 'block' : 'none')}}>\n        <div className=\"pb-modal\">\n          <div className=\"pb-modal-header\">\n            {props.title}\n          </div>\n          <div className=\"pb-modal-content\">\n            {fields}\n          </div>\n          <div className=\"pb-modal-footer\">\n            <button onClick={handleSubmit}>{props.buttonOk || 'Ok'}</button>\n            <button onClick={handleClose}>{props.buttonClose || 'Close'}</button>\n          </div>\n        </div>\n      </div>\n  );\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDinAJSMr19uJqLjwC0U46QAeUyAN9V6KQ\",\n  authDomain: \"my-dashboard-c3414.firebaseapp.com\",\n  databaseURL: \"https://my-dashboard-c3414.firebaseio.com\",\n  projectId: \"my-dashboard-c3414\",\n  storageBucket: \"my-dashboard-c3414.appspot.com\",\n  messagingSenderId: \"538394994186\",\n  appId: \"1:538394994186:web:039c300f930d3b4fca61f3\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar database = firebase.firestore();\n  \nexport default database;\n","import { useState, useEffect } from 'react';\nimport Modal from './Modal';\nimport { v4 } from 'uuid';\n//import axios from 'axios';\nimport database from '../firebase';\n\n//const api = axios.create({\n//  baseURL: 'http://192.168.1.51:3001/'\n//});\n\nconst formFields = [\n  { required: true,  label: 'Phone', type: 'input', placeholder: '', name: 'phone', value: '' },\n  { required: true,  label: 'Name', type: 'input', placeholder: '', name: 'name', value: '' },\n  { required: true,  label: 'Location', type: 'input', placeholder: '', name: 'location', value: '' },\n  { required: false, label: 'Email', type: 'input', placeholder: '', name: 'email', value: '' },\n]\n\n\n\nexport default function Phonebook() {\n  const [ phonebook, setPhonbook ] = useState([]);\n  const [ toggleAdd, setToggleAdd ] = useState(false);\n\n  const fetchContacts = async () => {\n    const tc = await database.collection('tcContacts').get();\n    const data = tc.docs.map(d => d.data());\n    return data;\n  }\n\n  useEffect(() => {\n    const getContacts = async () => {\n      const data = await fetchContacts();\n      if (data) setPhonbook(data);\n    }\n    getContacts();\n  }, []);\n\n  const phoneList = phonebook.map(p => {\n    return <li key={p.id}>\n      <span>{p.phone}</span>\n      <span>{p.name}</span>\n      <span>{p.location}</span>\n      <span>{p.email||' '}</span>\n      <span onClick={e=>handleDelPhonebook(p.id)}>&#x1f5d1;</span>\n    </li>\n  });\n\n  const handleModalClose = () => {\n    setToggleAdd(false);\n  }\n\n  const handleBtnAddNew = () => {\n    if (toggleAdd) setToggleAdd(false);\n    else setToggleAdd(true);\n  }\n\n  const handleDelPhonebook = async (id) => {\n    //await api.delete(`/contacts/${id}`);\n    await database.collection('tcContacts').doc(id).delete();\n    const newlist = phonebook.filter(p => p.id !== id);\n    setPhonbook(newlist);\n  }\n\n  const handleUpsertPhonebook = async (d) => {\n    const req = {\n      id: v4(),\n      ...d\n    };\n    //const resp = await api.post('/contacts',  req);\n    await database.collection('tcContacts').doc(req.id).set(req);\n    setPhonbook([...phonebook, req]);\n    setToggleAdd(false);\n  }\n\n  return (\n    <>\n      {\n        !toggleAdd \n        ? ''\n        : <Modal\n            title=\"New Entry\" \n            buttonOk=\"Add New\"\n            onButtonOk={handleUpsertPhonebook}\n            onButtonClose={handleModalClose}\n            visible={toggleAdd} \n            fields={formFields} \n          />\n      }\n\n      <div className=\"pb-header\">\n        <h1 className=\"\">PhoneBook</h1>\n      </div>\n      <ul className=\"pb-list\">\n        <li className=\"pg-list-head\">\n          <span>Phone</span>\n          <span>Name</span>\n          <span>Location</span>\n          <span>Email</span>\n          <span>&nbsp;</span>\n        </li>\n        {phoneList}\n      </ul>\n      <div className=\"pb-footer\">\n        <button onClick={handleBtnAddNew}>Add New</button>\n      </div>\n    </>\n  );\n}\n","import PhoneBook from './Phonebook';\n\nexport default function App() {\n  return (\n    <div className=\"pb-container\">\n      <PhoneBook />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}